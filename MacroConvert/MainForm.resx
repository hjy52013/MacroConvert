<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICEAAAEAIAAsEQAAFgAAACgAAAAgAAAAQgAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AADExMRwjIyM32VlZf1TU1P/SUlJ/0NDQ/9BQUH/QEBA/0BAQP9AQED/QEBA/0BAQP9AQED/QEBA/0BA
        QP9AQED/QEBA/0BAQP9AQED/QEBA/0BAQP9AQED/QEBA/0BAQP9AQED/QEBA/0BAQP9BQUH/RERE/0pK
        Sv9hYWH7iIiIvZ+fn/FzcnX/YV10/ysqTv8hIEH/Mh8//z8tVP9pS2b/gG6J/3hxjP94Z3H/dHGO/5yK
        nf+KmLn/f4mr/4KTsf94fqD/Z4Ci/3txjP9UXIf/e3CP/1VLdf8tMWL/Oi1X/0IxYP9LN23/UStw/1s4
        fP9oUIP/dWmF/1NRVv9fX1/9dHR1/Xtwi/9xaXr/g4KI/4KChv+Fg4f/eHKD/1k6bP+MZIn/bmR+/4mB
        hv9wanz/o46d/6/C4f+1vtz/usfj/6y21P97o8v/hXad/3F2pP+HcJb/RDtz/ywqYf9EIlP/PC5m/1Eq
        Zf9ULG7/VTt5/1Q4ff9NLIP/YFOE/0pKTP9JQ1r9OClx/11ab//Z2Nn/aWlq/yEgLf8zJDv/Jh1L/00o
        RP9AM0H/wMDB/3p2ff+Gb4L/uMjd/9fd8P/m6/b/zdvr/5O21v+bl7f/lI2r/35egf8yQnj/VDZi/0Eu
        Y/9UOmH/Xjdb/0IvZP89IWj/MxRn/x4Mbf8gGnT/OTlS/zArT/0qD2r/FQhG/2Ric//CwcP/Pj5T/yQU
        Pf9rXmz/p6Wo/6moqf/m5ub/vb2+/4qAjP/KzNv/5Ob0//Lv+P/e4/T/vcjg/6Swyf+fmKv/dWOC/1NR
        df9cRWn/Sz9q/3BHWv9KN1v/LxtV/zIRVv8ZDFz/Cwhg/w8OZP8rK0n/KipQ+RgPcv88Dl3/LBRS/1VQ
        Yv/DwcP/PjxN/0pDTf/ExMT/NzY2/76+vv90cnP/b2l5/9HL2P/l2+n/4svn/86v2//KxN//oLrO/6+t
        tv9sepD/fmBz/1lSd/92UGf/Z1Bk/0UxWf9EHkP/IRNK/xAOUP8RCU//EQ5S/yoqQ/81K0v5HRNs/xsP
        Wv9IFVP/QShQ/5iWmf+enqP/JB4r/6Gdn/+cnJz/wMDA/4N+fv+Pjp7/29HZ/9/J0v/er8v/vny4/8qx
        0P/Hzdf/ur7E/5SOlv+Bc4P/emB4/4FfcP9iVm//YjVZ/zQiUf8hFkf/KxBD/xoJRv8PDkn/Kio+/z0t
        SP1BGVH/XFdw/1lOZf83FzD/YV5j/7+9vv9XUWD/U0dO/7m4uP/f39//hoKA/6Kao//fys7/3LOx/+GX
        nf/ClLb/z7/M/93Y2P+9wcf/rZui/5GFkf+YdYL/fnSD/45dav9VO2v/PCxk/1snT/9BI1T/FxVR/yUd
        UP86M0L/Oi9L/zMZVv9fVGT/vLy+/2RhZf+vra7/joeL/3VYZ/+BcIH/b2Zp/+Pj4/+NjIr/sKik/9vE
        xf/blIv/6Htn/8qwtf/Ux8j/09LR/8nBwf+5rK7/s5mc/6KTlf+riYH/f2GA/3JKdP+CT3X/Y016/1E+
        c/9fPm3/Y0Nv/0c9Tf9NMz//VCVQ/ygUOP9VTFX/Zl1g/2BbYf9aPkb/l255/7qYoP+Dcnb/gXh3/4d9
        d//DrJT/2ZCF/+RlWv/tZEb/1Wpz/9SDi//RoaX/0bm4/8q7t/+/s63/waiZ/6WKj/+WaID/kmiD/2ZY
        hf9QM2j/XSRY/zwgXP8jIFv/MDBD/0A4Qv1kNEb/cC5A/2ExR/9jPU//hlFa/5RufP+7io//06Wi/9C2
        tP/LpqD/0nRu/+t4T//ph1n/5Iht/+SOeP/jb3D/3Fpi/91BUP/WXm7/z6Kl/9LEtv/FrKT/to2U/496
        kv92Y4X/ckRq/18wZf8sJGr/KRdd/zEUUP8zK0H/SzU7/182Rv9fQUr/g01T/5lhYv+reXT/wJCG/8+e
        mv/dt7L/3rKs/+Rsbv/oVVT/4I17/+HLrf/o28b/6uHS/+jYzv/hyb//3aSd/9teYv/YYWP/0ran/8qw
        rf+tlqD/n3uL/5Bjgf9pTX//Vjp2/14rX/9JHVn/OBpg/zQtSf9CND39ajI//4lCRP+GV17/k2hw/7mE
        ev/UpIv/5Luh/+HEtf/iinz/705F/+plVv/Zqpj/59vN//Hu3f/z7uL/8+zg/+3m2v/f0sT/2ol7/+lJ
        QP/TgHz/zrKw/8qmoP+3lpv/pX2Q/5tifP95S33/YT18/1Y7eP9LL33/OzBR/0g8QPlmRFD/dVNd/5pn
        av+wcnb/tY6P/9KlnP/pxq//3byb/+6LVf/rjFv/8H9V//B5Uv/moX3/5cSa/+XNqf/lwqH/47eT/+OV
        cP/rXEf/60U//+RSTf/Vsab/0b6u/8yvnf/CpaH/pIuk/5J3nv+VdpX/mGyD/5JjgP9UQVL/TUNI83lb
        Zf+Rcnj/o4OI/7eQk//Rop//4rGl/+PJu//jk3r/7XdW/9a4nP/nrnf/9pJL//aQT//1oVL/86tc//OT
        U//1jUf/9HJD/+COdf/fjnb/6V9I/9Sdkf/Uua//x5+j/8Geqf+znKr/pJKm/5qKrv+Da7H/hniu/1JO
        X/9UTFbnh3iR/5yYr/+rn7D/vaiv/82rqP/hua7/38O4/+VuYP/od2f/2M69/+mzeP/zp1T/28OP/+y5
        cP/ztl7/3ryM/+yjYP/xkFD/39G3/93MuP/iZlv/2Hd3/8+wsf+9nKL/rpSp/7Cgu/+wp8n/raLM/52J
        vP+QZJf/VUNW/01QYOOIjK3/wL/R/8q+z//LsLv/3a2r/+e6sv/btqv/42VX/+GVgP/b0r//6qFu//Cj
        Yf/X2br/68iB//LEbP/Y2LX/5bd4/+2kXv/j2cP/5dfJ/+NsZv/fYWT/2LGu/8ylq/+6pLX/tLHJ/8fM
        4P/Cy+P/iJvN/2xrrf9GQVz/Vk1b7ZWIqf+9uM3/zMHR/8CsvP/JqbH/2rq2/9umnf/mXU7/3auW/97P
        vf/pn2f/6K5y/9/gx//v0Ij/8spt/9zgwf/lvoT/7qlf/+XbxP/o4M7/5HRp/+NUV//Krq//uZ+k/7yp
        uf/DvdL/1dLi/87I4f+Xl8b/Zlyd/0U9Vf9MTF37enig/5iLrf/Aqr3/zKq1/9yysv/hwbr/3ZSO/+lY
        S//gvqz/4dC5/+qoZ//iwIX/5eXO/+/Mhv/yvWT/3uHF/+e7jP/0lFL/5tS+/+rk1v/mk3T/6Wta/9ix
        q//Kk4//vZGa/7mjtv+5scv/q6bN/6CYwv+Cdaf/TUVZ/2BHUv2jZ4X/sIOc/72frv/IpK3/2bGx/+K5
        t//ggoL/5WBW/+HFuf/jz7D/665i/+DFj//n59D/78CA//OvWv/i4cf/57uW//OET//izbX/7+bW/+O4
        of/cpY//0bSr/6+LkP+fhJD/jXeL/5Z7lP+abI3/l12I/5Bok/9WSVf/VkpZ/5txlf+ncI3/qW19/7V7
        g//Jl5f/062q/9p0eP/jZ2P/5My9/+TKp//unVr/4buU/+nn1P/uuH//8adZ/+HfyP/lvp7/7X1R/969
        qf/t39P/7M6//+K8rP/WqZT/wIR//5hnb/9sTFz/VUVZ/0M7Vf8mKln/Hydm/zAySv9QQ1X9dlB9/3FM
        cv+DW3D/nG95/7aMi//OpaP/1W50/95ta//izb7/48Ke//CKU//hu6D/7OjV/+uzgf/wnVf/4dzG/+HD
        qf/ld1P/2ayY/+rUyP/rwbb/16ig/7+Wi/+leHP/hFVc/188Sv9bQ0//YVFZ/0YwSf84G0X/OC4//zk3
        UP1VNmv/gEJc/4RWa/+Ranb/uoOB/8aenv/Vcnv/2Xl4/+DPwP/ks5b/8XhW/+O/rf/s6dr/6K+K/+6U
        Xf/j3Mb/38u4/+J1X//bm5D/58e+/+S0q//Jl5P/t398/4lqaP9uS1D/Xj1C/1ZHS/9pZGX/VElU/zUj
        Rv80LT7/SzNG/Vsxav9ZQHH/iFVr/6hscf+lf4L/v5qY/9Gpof/aubD/5NPE/+OhkP/ve3T/5Ma//+3o
        3v/kqpT/7Ipy/+Tbzv/hzsT/4nBp/9qJhP/bvbf/zaKg/7WCgv+PZ2r/eVBN/2dPTP96c27/joeA/4d9
        d/9tXWD/PzBO/zIsPv89M1D9WzFx/4RHZP+Va2//mHl+/7GAe/+6k4v/yaid/9a6r//ex7v/4pmZ/+uL
        lP/lzMn/7eLd/+Wjn//sko//5dzT/+bTyf/jcnj/1YCN/9O1t//Bmp3/l3J8/3lSWf9dR0v/gHJu/6qh
        lv+noJb/i4WB/1ZHVv9FIUj/Oyw//0w1S/17QHD/e156/4hnbv+aWWT/kGV4/7B7ff+3kZL/0a+e/9W9
        sf/apKz/46u6/+bR1P/m2dn/46Ow/++gsP/i3Nf/5tvS/96rs//Srrv/vqSp/6OAif+HanL/WUhT/35w
        bv+mnZT/t7Cl/5qQjf91WmD/TjRS/0Q0Zf89Nkv/Sz1V/XZaiP+Tb37/lmN2/4Fjf/+nc3//rI6R/7+h
        mv/Fp6X/07Cv/9TBxv/k1Nn/4tvg/+Xf4P/huM3/7bzR/+jk5f/r4eH/5tvc/8e6wP+ikZr/jGty/3Zl
        av+GeXf/pqCY/7GpoP+ZiYT/cmBx/1VDaP9bMWL/aDlt/0k/UP9RQVT9mnGJ/5l1i/+EZor/nHB+/5uC
        jP+nipP/sY+W/7uXov+7oa3/0ba9/93L0v/S1OD/6eDn/+PR4//t2Ob/7eru/+zm6//k1Nn/saaz/5aE
        jf9uYmj/h3l2/6mimf+6sqj/lo6N/39ve/9/WHP/YUt7/1hKif9xUY//UEFU/1xNVv2Uf5b/jHiU/6B1
        hf+VgIv/kX+O/6R/jf+chZz/spKl/66iuf/PuMb/0cPT/8PM3v/n3+n/7O30//P09//x7/X/4+Ps/9fT
        3f+zp7T/i4CK/46Ihf+qo5v/uLGn/5SMjf+Hb3//gnCV/4p3oP+FZpn/c1yX/3tjpv9VSWL9YVxm/ZOH
        m/+fgoz/l4aR/42ClP+jf4z/kIOX/6eJnP+sm7T/wq3B/8K50P/Qy9z/zNPm/93d6v/s7vb/+Pb5//Px
        9v/n5O3/29zm/761vv+TkZf/sqym/7q1rP+lmpb/hHaI/31vlf+Uc57/mYSz/5qHuv+McbD/jnWy/11V
        aP18e37/p5qk/56Rnv+UiqD/n4ea/5WInf+Zi6H/rZCl/7Snwf/Gq8L/tq7N/7+92P/CyeP/0djq/+Xo
        8//v8/f/7+31/+Le6//S1OH/tLHB/5iQm/+sqKv/pZ2d/5qMmf+egZz/iH+v/4x/t/+ghrn/rJXH/6uW
        y/+llb//aGZt+bq6uuOKiIv9rai1/7Gktv+wpLf/qKW7/76pu/+/s8n/z7vP/8C20//Du9b/xMXe/87S
        5v/b4/H/4+Tw/+vt9P/t6vH/4eHt/9rY4v/BwdL/uKy7/6uruf+ypK//s6m+/8Csx/+0pMj/pKHR/6yi
        0v+3p9T/ua/L/4aDiv2ZmZnX8PDwRq2trbN9e3/vb2xw+2tqb/1raW/9cWtv/XBudP10bXL9bWx1/XBu
        df1wcXf9dHV5/XV4e/12dnr9enl7/Xl5ev13eHr9d3Z4/XBxdf1vbXH9amlu/Wxpbf1ua3D9cG10/XBq
        cv1qaXT9aml0/W1rdv13dnzrmJiZp9LS0kKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAE=
</value>
  </data>
</root>